cmake_minimum_required (VERSION 3.9)

project(CPLUSPLUS)

# 默认不显示编译命令，需要调查编译出错时，打开以下开关
#set(CMAKE_VERBOSE_MAKEFILE true)
set(CMAKE_MODULE_PATH ${CPLUSPLUS_SOURCE_DIR}/cmake-module)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CPLUSPLUS_SOURCE_DIR}/build.out)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CPLUSPLUS_SOURCE_DIR}/build.out)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CPLUSPLUS_SOURCE_DIR}/build.out)

set(CPLUSPLUS_COMPILER_FLAGS "-std=c++11")
set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${CPLUSPLUS_COMPILER_FLAGS}" )

set(CMAKE_SKIP_BUILD_RPATH true)
set(CMAKE_BUILD_WITH_INSTALL_RPATH true)
# CMAKE_INSTALL_RPATH does NOT work properly with ${ORIGIN}
# using linker flags instead
#set(CMAKE_INSTALL_RPATH \${ORIGIN}/../lib)
set(CPLUSPLUS_RPATH "-Wl,-rpath,\${ORIGIN}/../lib")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${CPLUSPLUS_RPATH}")
set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} ${CPLUSPLUS_RPATH}")
#set(CMAKE_EXE_LINKER_FLAGS "-pthread")

include_directories(${CPLUSPLUS_SOURCE_DIR}/third-party/include)
link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY} ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY} ${CPLUSPLUS_SOURCE_DIR}/third-party/lib)
add_definitions(-D__STDC_LIMIT_MACROS -D_GNU_SOURCE)

add_subdirectory(src)
SET(CPACK_GENERATOR "TGZ")
include(CPack)
